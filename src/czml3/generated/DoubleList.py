# generated by datamodel-codegen:
#   filename:  DoubleList.json
#   timestamp: 2021-03-29T05:46:25+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import BaseModel, Field

from . import Polygon


class DoubleListValueProperty(BaseModel):
    __root__: Any = Field(
        ...,
        description='The base schema for a property whose value may be written as a list of floating-point numbers.',
    )


class DoubleListValue(BaseModel):
    """
    A list of values specified as an array of numbers.
    """

    __root__: List[float] = Field(
        ...,
        description='A list of values specified as an array of numbers.',
        title='DoubleList',
    )


class DoubleList(BaseModel):
    """
    A list of floating-point numbers.
    """

    array: Optional[DoubleListValue] = Field(
        None, description='The list of values specified as an array of numbers.'
    )
    references: Optional[Polygon.ReferenceListValue] = Field(
        None,
        description='The list of values specified as references. Each reference is to a property that defines a single value, which may change with time.',
    )
