# generated by datamodel-codegen:
#   filename:  Color.json
#   timestamp: 2021-04-04T10:04:35+00:00

from __future__ import annotations

from typing import List, Optional, Union

import BaseCZMLObject
from pydantic import Field

from .DeletableProperty import DeletableProperty
from .InterpolatableProperty import InterpolatableProperty
from .Values import ReferenceValue, RgbafValue, RgbaValue


class Color1(InterpolatableProperty, DeletableProperty):
    """
    A color. The color can optionally vary over time.
    """

    rgba: Optional[RgbaValue.Rgba] = Field(
        None,
        description='The color specified as an array of color components `[Red, Green, Blue, Alpha]` where each component is an integer in the range 0-255.',
    )
    rgbaf: Optional[RgbafValue.Rgbaf] = Field(
        None,
        description='The color specified as an array of color components `[Red, Green, Blue, Alpha]` where each component is a double in the range 0.0-1.0.',
    )
    reference: Optional[ReferenceValue.Reference] = Field(
        None, description='The color specified as a reference to another property.'
    )


class Color(BaseCZMLObject):
    """
    A color. The color can optionally vary over time.
    """

    __root__: Union[List[Color1], Color1] = Field(
        ...,
        description='A color. The color can optionally vary over time.',
        title='Color',
    )
