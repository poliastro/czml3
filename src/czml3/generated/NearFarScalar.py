# generated by datamodel-codegen:
#   filename:  NearFarScalar.json
#   timestamp: 2021-03-29T05:46:25+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import BaseModel, Field

from . import LabelStyle


class NearFarScalarValueProperty(BaseModel):
    __root__: Any = Field(
        ...,
        description='The base schema for a property whose value may be written as a near-far scalar value specified as four values `[NearDistance, NearValue, FarDistance, FarValue]`.',
    )


class NearFarScalarValue(BaseModel):
    """
    A near-far scalar value specified as four values `[NearDistance, NearValue, FarDistance, FarValue]`. If the array has four elements, the value is constant. If it has five or more elements, they are time-tagged samples arranged as `[Time, NearDistance, NearValue, FarDistance, FarValue, Time, NearDistance, NearValue, FarDistance, FarValue, ...]`, where Time is an ISO 8601 date and time string or seconds since epoch.
    """

    __root__: List = Field(
        ...,
        description='A near-far scalar value specified as four values `[NearDistance, NearValue, FarDistance, FarValue]`. If the array has four elements, the value is constant. If it has five or more elements, they are time-tagged samples arranged as `[Time, NearDistance, NearValue, FarDistance, FarValue, Time, NearDistance, NearValue, FarDistance, FarValue, ...]`, where Time is an ISO 8601 date and time string or seconds since epoch.',
        title='NearFarScalar',
    )


class NearFarScalar(BaseModel):
    """
    A numeric value which will be linearly interpolated between two values based on an object's distance from the camera, in eye coordinates. The computed value will interpolate between the near value and the far value while the camera distance falls between the near distance and the far distance, and will be clamped to the near or far value while the distance is less than the near distance or greater than the far distance, respectively.
    """

    nearFarScalar: Optional[NearFarScalarValue] = Field(
        None,
        description='The value specified as four values `[NearDistance, NearValue, FarDistance, FarValue]`, with distances in eye coordinates in meters.',
    )
    reference: Optional[LabelStyle.ReferenceValue] = Field(
        None, description='The value specified as a reference to another property.'
    )
