# generated by datamodel-codegen:
#   filename:  Rectangle.json
#   timestamp: 2021-04-04T10:04:35+00:00

from __future__ import annotations

from typing import Optional

import BaseCZMLObject
from pydantic import Field

from . import (
    Boolean,
    ClassificationType,
    Color,
    DistanceDisplayCondition,
    Double,
    HeightReference,
    Integer,
    Material,
    RectangleCoordinates,
    ShadowMode,
)


class Rectangle(BaseCZMLObject):
    """
    A cartographic rectangle, which conforms to the curvature of the globe and can be placed on the surface or at altitude and can optionally be extruded into a volume.
    """

    show: Optional[Boolean] = Field(
        True, description='Whether or not the rectangle is shown.'
    )
    coordinates: Optional[RectangleCoordinates] = Field(
        None, description='The coordinates of the rectangle.'
    )
    height: Optional[Double] = Field(0.0, description='The height of the rectangle.')
    heightReference: Optional[HeightReference] = Field(
        'NONE',
        description='The height reference of the rectangle, which indicates if `height` is relative to terrain or not.',
    )
    extrudedHeight: Optional[Double] = Field(
        None, description='The extruded height of the rectangle.'
    )
    extrudedHeightReference: Optional[HeightReference] = Field(
        'NONE',
        description='The extruded height reference of the rectangle, which indicates if `extrudedHeight` is relative to terrain or not.',
    )
    rotation: Optional[Double] = Field(
        0.0, description='The rotation of the rectangle clockwise from north.'
    )
    stRotation: Optional[Double] = Field(
        0.0,
        description='The rotation of any applied texture. A positive rotation is counter-clockwise.',
    )
    granularity: Optional[Double] = Field(
        'Ï€ / 180.0', description='The sampling distance, in radians.'
    )
    fill: Optional[Boolean] = Field(
        True, description='Whether or not the rectangle is filled.'
    )
    material: Optional[Material] = Field(
        'solid white',
        description='The material to display on the surface of the rectangle.',
    )
    outline: Optional[Boolean] = Field(
        False, description='Whether or not the rectangle is outlined.'
    )
    outlineColor: Optional[Color] = Field(
        'black', description='The color of the rectangle outline.'
    )
    outlineWidth: Optional[Double] = Field(
        1.0, description='The width of the rectangle outline.'
    )
    shadows: Optional[ShadowMode] = Field(
        'DISABLED',
        description='Whether or not the rectangle casts or receives shadows.',
    )
    distanceDisplayCondition: Optional[DistanceDisplayCondition] = Field(
        None,
        description='The display condition specifying at what distance from the camera this rectangle will be displayed.',
    )
    classificationType: Optional[ClassificationType] = Field(
        'BOTH',
        description='Whether a classification affects terrain, 3D Tiles, or both.',
    )
    zIndex: Optional[Integer] = Field(
        '0',
        description='The z-index of the rectangle, used for ordering ground geometry. Only has an effect if the rectangle is constant, and `height` and `extrudedHeight` are not specified.',
    )
