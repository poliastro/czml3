# generated by datamodel-codegen:
#   filename:  Clock.json
#   timestamp: 2021-04-04T10:04:35+00:00

from __future__ import annotations

from typing import Optional

import BaseCZMLObject
from pydantic import Field

from .Values import ClockRangeValue, ClockStepValue, TimeValue


class Clock(BaseCZMLObject):
    """
    Initial settings for a simulated clock when a document is loaded. The start and stop time are configured using the interval property.
    """

    currentTime: Optional[TimeValue.Time] = Field(
        None, description='The current time, specified in ISO8601 format.'
    )
    multiplier: Optional[float] = Field(
        1.0,
        description='The multiplier. When `step` is set to `TICK_DEPENDENT`, this is the number of seconds to advance each tick. When `step` is set to `SYSTEM_CLOCK_DEPENDENT`, this is multiplied by the elapsed system time between ticks. This value is ignored in `SYSTEM_CLOCK` mode.',
    )
    range: Optional[ClockRangeValue.ClockRange] = Field(
        'LOOP_STOP',
        description='The behavior when the current time reaches its start or end times.',
    )
    step: Optional[ClockStepValue.ClockStep] = Field(
        'SYSTEM_CLOCK_MULTIPLIER',
        description='How the current time advances each tick.',
    )
