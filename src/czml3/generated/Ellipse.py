# generated by datamodel-codegen:
#   filename:  Ellipse.json
#   timestamp: 2021-03-29T05:46:25+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field

from . import Cylinder, Rectangle


class Ellipse(BaseModel):
    """
    An ellipse, which is a closed curve on or above the surface of the Earth.
    """

    show: Optional[Cylinder.Boolean] = Field(
        True, description='Whether or not the ellipse is shown.'
    )
    semiMajorAxis: Optional[Cylinder.Double] = Field(
        None, description="The length of the ellipse's semi-major axis in meters."
    )
    semiMinorAxis: Optional[Cylinder.Double] = Field(
        None, description="The length of the ellipse's semi-minor axis in meters."
    )
    height: Optional[Cylinder.Double] = Field(
        '0.0', description='The altitude of the ellipse relative to the surface.'
    )
    heightReference: Optional[Cylinder.HeightReference] = Field(
        'NONE',
        description='The height reference of the ellipse, which indicates if `height` is relative to terrain or not.',
    )
    extrudedHeight: Optional[Cylinder.Double] = Field(
        None,
        description="The altitude of the ellipse's extruded face relative to the surface.",
    )
    extrudedHeightReference: Optional[Cylinder.HeightReference] = Field(
        'NONE',
        description='The extruded height reference of the ellipse, which indicates if `extrudedHeight` is relative to terrain or not.',
    )
    rotation: Optional[Cylinder.Double] = Field(
        '0.0', description='The angle from north (counter-clockwise) in radians.'
    )
    stRotation: Optional[Cylinder.Double] = Field(
        '0.0', description='The rotation of any applied texture coordinates.'
    )
    granularity: Optional[Cylinder.Double] = Field(
        'Ï€ / 180.0', description='The sampling distance, in radians.'
    )
    fill: Optional[Cylinder.Boolean] = Field(
        True, description='Whether or not the ellipse is filled.'
    )
    material: Optional[Cylinder.Material] = Field(
        'solid white', description='The material to use to fill the ellipse.'
    )
    outline: Optional[Cylinder.Boolean] = Field(
        False, description='Whether or not the ellipse is outlined.'
    )
    outlineColor: Optional[Cylinder.Color] = Field(
        'black', description='The color of the ellipse outline.'
    )
    outlineWidth: Optional[Cylinder.Double] = Field(
        1.0, description='The width of the ellipse outline.'
    )
    numberOfVerticalLines: Optional[Cylinder.Integer] = Field(
        '16',
        description='The number of vertical lines to use when outlining an extruded ellipse.',
    )
    shadows: Optional[Cylinder.ShadowMode] = Field(
        'DISABLED', description='Whether or not the ellipse casts or receives shadows.'
    )
    distanceDisplayCondition: Optional[Cylinder.DistanceDisplayCondition] = Field(
        None,
        description='The display condition specifying at what distance from the camera this ellipse will be displayed.',
    )
    classificationType: Optional[Rectangle.ClassificationType] = Field(
        'BOTH',
        description='Whether a classification affects terrain, 3D Tiles, or both.',
    )
    zIndex: Optional[Cylinder.Integer] = Field(
        '0',
        description='The z-index of the ellipse, used for ordering ground geometry. Only has an effect if the ellipse is constant, and `height` and `extrudedHeight` are not specified.',
    )
