# generated by datamodel-codegen:
#   filename:  PolylineMaterial.json
#   timestamp: 2021-03-29T05:46:25+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Field

from . import Cylinder, Path


class PolylineMaterial(BaseModel):
    """
    A definition of how a polyline is colored or shaded.
    """

    solidColor: Optional[Cylinder.SolidColorMaterial] = Field(
        None,
        description='A material that fills the line with a solid color, which may be translucent.',
    )
    polylineOutline: Optional[Path.PolylineOutlineMaterial] = Field(
        None, description='A material that fills the line with a color and outline.'
    )
    polylineArrow: Optional[Path.PolylineArrowMaterial] = Field(
        None, description='A material that fills the line with an arrow.'
    )
    polylineDash: Optional[Path.PolylineDashMaterial] = Field(
        None, description='A material that fills the line with a pattern of dashes.'
    )
    polylineGlow: Optional[Path.PolylineGlowMaterial] = Field(
        None, description='A material that fills the line with a glowing color.'
    )
    image: Optional[Cylinder.ImageMaterial] = Field(
        None, description='A material that fills the line with an image.'
    )
    grid: Optional[Cylinder.GridMaterial] = Field(
        None, description='A material that fills the line with a grid.'
    )
    stripe: Optional[Cylinder.StripeMaterial] = Field(
        None, description='A material that fills the line with alternating colors.'
    )
    checkerboard: Optional[Cylinder.CheckerboardMaterial] = Field(
        None, description='A material that fills the line with a checkerboard pattern.'
    )
