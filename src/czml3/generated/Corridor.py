# generated by datamodel-codegen:
#   filename:  Corridor.json
#   timestamp: 2021-04-04T10:04:35+00:00

from __future__ import annotations

from typing import Optional

import BaseCZMLObject
from pydantic import Field

from . import (
    Boolean,
    ClassificationType,
    Color,
    CornerType,
    DistanceDisplayCondition,
    Double,
    HeightReference,
    Integer,
    Material,
    PositionList,
    ShadowMode,
)


class Corridor(BaseCZMLObject):
    """
    A corridor, which is a shape defined by a centerline and width that conforms to the curvature of the globe. It can be placed on the surface or at altitude and can optionally be extruded into a volume.
    """

    show: Optional[Boolean] = Field(
        True, description='Whether or not the corridor is shown.'
    )
    positions: Optional[PositionList] = Field(
        None,
        description='The array of positions defining the centerline of the corridor.',
    )
    width: Optional[Double] = Field(
        None,
        description='The width of the corridor, which is the distance between the edges of the corridor.',
    )
    height: Optional[Double] = Field(
        0.0,
        description='The height of the corridor, which is the altitude of the corridor relative to the surface.',
    )
    heightReference: Optional[HeightReference] = Field(
        'NONE',
        description='The height reference of the corridor, which indicates if `height` is relative to terrain or not.',
    )
    extrudedHeight: Optional[Double] = Field(
        None,
        description="The extruded height of the corridor, which is the altitude of the corridor's extruded face relative to the surface.",
    )
    extrudedHeightReference: Optional[HeightReference] = Field(
        'NONE',
        description='The extruded height reference of the corridor, which indicates if `extrudedHeight` is relative to terrain or not.',
    )
    cornerType: Optional[CornerType] = Field(
        'ROUNDED', description='The style of the corners of the corridor.'
    )
    granularity: Optional[Double] = Field(
        'Ï€ / 180.0', description='The sampling distance, in radians.'
    )
    fill: Optional[Boolean] = Field(
        True, description='Whether or not the corridor is filled.'
    )
    material: Optional[Material] = Field(
        'solid white',
        description='The material to display on the surface of the corridor.',
    )
    outline: Optional[Boolean] = Field(
        False, description='Whether or not the corridor is outlined.'
    )
    outlineColor: Optional[Color] = Field(
        'black', description='The color of the corridor outline.'
    )
    outlineWidth: Optional[Double] = Field(
        1.0, description='The width of the corridor outline.'
    )
    shadows: Optional[ShadowMode] = Field(
        'DISABLED', description='Whether or not the corridor casts or receives shadows.'
    )
    distanceDisplayCondition: Optional[DistanceDisplayCondition] = Field(
        None,
        description='The display condition specifying the distance from the camera at which this corridor will be displayed.',
    )
    classificationType: Optional[ClassificationType] = Field(
        'BOTH',
        description='Whether a classification affects terrain, 3D Tiles, or both.',
    )
    zIndex: Optional[Integer] = Field(
        '0',
        description='The z-index of the corridor, used for ordering ground geometry. Only has an effect if the corridor is constant, and `height` and `extrudedHeight` are not specified.',
    )
