# generated by datamodel-codegen:
#   filename:  CustomProperties.json
#   timestamp: 2021-03-29T05:46:25+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, Extra, Field

from . import (
    CustomProperty,
    Cylinder,
    LabelStyle,
    Model,
    NearFarScalar,
    NodeTransformation,
    Position,
)


class CustomProperties(BaseModel):
    """
    A set of custom properties.
    """

    pass

    class Config:
        extra = Extra.allow


class CustomProperty(BaseModel):
    """
    A custom property.
    """

    boolean: Optional[Cylinder.BooleanValue] = Field(
        None, description='The property specified as a boolean value.'
    )
    boundingRectangle: Optional[CustomProperty.BoundingRectangleValue] = Field(
        None, description='The property specified as `[X, Y, Width, Height]`.'
    )
    cartesian: Optional[Position.Cartesian3Value] = Field(
        None,
        description='The property specified as a three-dimensional Cartesian value `[X, Y, Z]`.',
    )
    cartographicRadians: Optional[Position.CartographicRadiansValue] = Field(
        None,
        description='The property specified in Cartographic WGS84 coordinates, `[Longitude, Latitude, Height]`, where Longitude and Latitude are in radians and Height is in meters.',
    )
    cartographicDegrees: Optional[Position.CartographicDegreesValue] = Field(
        None,
        description='The property specified in Cartographic WGS84 coordinates, `[Longitude, Latitude, Height]`, where Longitude and Latitude are in degrees and Height is in meters.',
    )
    cartesian2: Optional[Cylinder.Cartesian2Value] = Field(
        None,
        description='The property specified as a two-dimensional Cartesian value `[X, Y]`.',
    )
    unitCartesian: Optional[CustomProperty.UnitCartesian3Value] = Field(
        None,
        description='The property specified as a three-dimensional unit magnitude Cartesian value `[X, Y, Z]`.',
    )
    spherical: Optional[CustomProperty.SphericalValue] = Field(
        None,
        description='The property specified as a spherical value `[Clock, Cone, Magnitude]`. The clock angle is measured in the XY plane from the positive X axis toward the positive Y axis. The cone angle is the angle from the positive Z axis toward the negative Z axis.',
    )
    unitSpherical: Optional[CustomProperty.UnitSphericalValue] = Field(
        None,
        description='The property specified as a unit spherical value `[Clock, Cone]`. The clock angle is measured in the XY plane from the positive X axis toward the positive Y axis. The cone angle is the angle from the positive Z axis toward the negative Z axis.',
    )
    rgba: Optional[Cylinder.RgbaValue] = Field(
        None,
        description='The property specified as an array of color components `[Red, Green, Blue, Alpha]` where each component is an integer in the range 0-255.',
    )
    rgbaf: Optional[Cylinder.RgbafValue] = Field(
        None,
        description='The property specified as an array of color components `[Red, Green, Blue, Alpha]` where each component is a double in the range 0.0-1.0.',
    )
    colorBlendMode: Optional[Model.ColorBlendModeValue] = Field(
        None, description='The property specified as a color blend mode.'
    )
    cornerType: Optional[CustomProperty.CornerTypeValue] = Field(
        None, description='The property specified as a corner style.'
    )
    heightReference: Optional[Cylinder.HeightReferenceValue] = Field(
        None, description='The property specified as a height reference.'
    )
    horizontalOrigin: Optional[CustomProperty.HorizontalOriginValue] = Field(
        None, description='The property specified as a horizontal origin.'
    )
    labelStyle: Optional[LabelStyle.LabelStyleValue] = Field(
        None, description='The property specified as a label style.'
    )
    number: Optional[Cylinder.DoubleValue] = Field(
        None, description='The property specified as a number.'
    )
    nearFarScalar: Optional[NearFarScalar.NearFarScalarValue] = Field(
        None,
        description='The property specified as four values `[NearDistance, NearValue, FarDistance, FarValue]`.',
    )
    unitQuaternion: Optional[NodeTransformation.UnitQuaternionValue] = Field(
        None,
        description='The property specified as a 4-dimensional unit magnitude quaternion, specified as `[X, Y, Z, W]`.',
    )
    shadowMode: Optional[Cylinder.ShadowModeValue] = Field(
        None, description='The property specified as a shadow mode.'
    )
    string: Optional[CustomProperty.StringValue] = Field(
        None, description='The property specified as a string.'
    )
    stripeOrientation: Optional[Cylinder.StripeOrientationValue] = Field(
        None,
        description='The property specified as an orientation of stripes in the stripe material.',
    )
    wsen: Optional[CustomProperty.CartographicRectangleRadiansValue] = Field(
        None,
        description='The property specified as a Cartographic rectangle `[WestLongitude, SouthLatitude, EastLongitude, NorthLatitude]`, with values in radians.',
    )
    wsenDegrees: Optional[CustomProperty.CartographicRectangleDegreesValue] = Field(
        None,
        description='The property specified as a Cartographic rectangle `[WestLongitude, SouthLatitude, EastLongitude, NorthLatitude]`, with values in degrees.',
    )
    uri: Optional[Cylinder.UriValue] = Field(
        None, description='The property specified as a URI.'
    )
    verticalOrigin: Optional[CustomProperty.VerticalOriginValue] = Field(
        None, description='The property specified as a vertical origin.'
    )
