# generated by datamodel-codegen:
#   filename:  Ellipsoid.json
#   timestamp: 2021-04-04T10:04:35+00:00

from __future__ import annotations

from typing import Optional

import BaseCZMLObject
from pydantic import Field

from . import (
    Boolean,
    Color,
    DistanceDisplayCondition,
    Double,
    EllipsoidRadii,
    HeightReference,
    Integer,
    Material,
    ShadowMode,
)


class Ellipsoid(BaseCZMLObject):
    """
    A closed quadric surface that is a three-dimensional analogue of an ellipse.
    """

    show: Optional[Boolean] = Field(
        True, description='Whether or not the ellipsoid is shown.'
    )
    radii: Optional[EllipsoidRadii] = Field(
        None, description='The radii of the ellipsoid.'
    )
    innerRadii: Optional[EllipsoidRadii] = Field(
        None, description='The inner radii of the ellipsoid.'
    )
    minimumClock: Optional[Double] = Field(
        0.0, description='The minimum clock angle of the ellipsoid.'
    )
    maximumClock: Optional[Double] = Field(
        '2π', description='The maximum clock angle of the ellipsoid.'
    )
    minimumCone: Optional[Double] = Field(
        0.0, description='The minimum cone angle of the ellipsoid.'
    )
    maximumCone: Optional[Double] = Field(
        'π', description='The maximum cone angle of the ellipsoid.'
    )
    heightReference: Optional[HeightReference] = Field(
        'NONE',
        description='The height reference of the ellipsoid, which indicates if the position is relative to terrain or not.',
    )
    fill: Optional[Boolean] = Field(
        True, description='Whether or not the ellipsoid is filled.'
    )
    material: Optional[Material] = Field(
        'solid white',
        description='The material to display on the surface of the ellipsoid.',
    )
    outline: Optional[Boolean] = Field(
        False, description='Whether or not the ellipsoid is outlined.'
    )
    outlineColor: Optional[Color] = Field(
        'black', description='The color of the ellipsoid outline.'
    )
    outlineWidth: Optional[Double] = Field(
        1.0, description='The width of the ellipsoid outline.'
    )
    stackPartitions: Optional[Integer] = Field(
        64, description='The number of times to partition the ellipsoid into stacks.'
    )
    slicePartitions: Optional[Integer] = Field(
        64,
        description='The number of times to partition the ellipsoid into radial slices.',
    )
    subdivisions: Optional[Integer] = Field(
        128,
        description='The number of samples per outline ring, determining the granularity of the curvature.',
    )
    shadows: Optional[ShadowMode] = Field(
        'DISABLED',
        description='Whether or not the ellipsoid casts or receives shadows.',
    )
    distanceDisplayCondition: Optional[DistanceDisplayCondition] = Field(
        None,
        description='The display condition specifying at what distance from the camera this ellipsoid will be displayed.',
    )
