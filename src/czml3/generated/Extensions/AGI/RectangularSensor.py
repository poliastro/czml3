# generated by datamodel-codegen:
#   filename:  Extensions/AGI/RectangularSensor.json
#   timestamp: 2021-04-04T10:04:35+00:00

from __future__ import annotations

from typing import Optional

import BaseCZMLObject
from pydantic import Field

from ... import Boolean, Color, Double, Integer, Material
from . import SensorVolumePortionToDisplay


class RectangularSensor(BaseCZMLObject):
    """
    A rectangular pyramid sensor volume taking into account occlusion of an ellipsoid, i.e., the globe.
    """

    show: Optional[Boolean] = Field(
        True,
        description='Whether or not the entire rectangular pyramid sensor is shown.',
    )
    xHalfAngle: Optional[Double] = Field('π / 2', description='The X half angle.')
    yHalfAngle: Optional[Double] = Field('π / 2', description='The Y half angle.')
    radius: Optional[Double] = Field(
        'Infinity', description='The radial limit of the sensor.'
    )
    showIntersection: Optional[Boolean] = Field(
        True,
        description='Whether or not the intersection of the sensor with the Earth is shown.',
    )
    intersectionColor: Optional[Color] = Field(
        'white',
        description='The color of the intersection of the sensor with the Earth.',
    )
    intersectionWidth: Optional[Double] = Field(
        1.0, description='The width of the intersection in pixels.'
    )
    showLateralSurfaces: Optional[Boolean] = Field(
        True,
        description='Whether or not the lateral surfaces, i.e., the outer sides of the sensor, are shown.',
    )
    lateralSurfaceMaterial: Optional[Material] = Field(
        'solid white',
        description="The material to use for the sensor's lateral surface, i.e., the outer sides of the sensor.",
    )
    showEllipsoidSurfaces: Optional[Boolean] = Field(
        True, description='Whether or not ellipsoid surfaces are shown.'
    )
    ellipsoidSurfaceMaterial: Optional[Material] = Field(
        'solid white',
        description="The material to use for the sensor's ellipsoid surfaces.",
    )
    showEllipsoidHorizonSurfaces: Optional[Boolean] = Field(
        True, description='Whether or not ellipsoid horizon surfaces are shown.'
    )
    ellipsoidHorizonSurfaceMaterial: Optional[Material] = Field(
        'solid white',
        description="The material to use for the sensor's ellipsoid horizon surfaces.",
    )
    showDomeSurfaces: Optional[Boolean] = Field(
        True, description='Whether or not dome surfaces are shown.'
    )
    domeSurfaceMaterial: Optional[Material] = Field(
        'solid white', description="The material to use for the sensor's dome surfaces."
    )
    portionToDisplay: Optional[SensorVolumePortionToDisplay] = Field(
        'COMPLETE', description='What part of the sensor should be displayed.'
    )
    environmentConstraint: Optional[Boolean] = Field(
        False,
        description='Whether or not the sensor will be occluded by objects in the current view of the environment, e.g. visible terrain or models.',
    )
    showEnvironmentOcclusion: Optional[Boolean] = Field(
        False,
        description='Whether or not the portion of the terrain occluded by the environment will be drawn with a separate material.',
    )
    environmentOcclusionMaterial: Optional[Material] = Field(
        'solid white',
        description='The material to use for the portion of the sensor occluded by the environment.',
    )
    showEnvironmentIntersection: Optional[Boolean] = Field(
        False,
        description='Whether or not a line showing where the sensor intersects the environment will be drawn.',
    )
    environmentIntersectionColor: Optional[Color] = Field(
        'white',
        description='The color of the intersection line between the sensor and the environment.',
    )
    environmentIntersectionWidth: Optional[Double] = Field(
        5.0,
        description='The width in meters of the intersection line between the sensor and the environment.',
    )
    showThroughEllipsoid: Optional[Boolean] = Field(
        False,
        description='Whether or not a sensor intersecting the ellipsoid is drawn through the ellipsoid and potentially out to the other side.',
    )
    showViewshed: Optional[Boolean] = Field(
        False, description='Whether or not the viewshed of the sensor will be drawn.'
    )
    viewshedVisibleColor: Optional[Color] = Field(
        'lime, 50% transparent',
        description='The color of the scene geometry that is visible to the sensor.',
    )
    viewshedOccludedColor: Optional[Color] = Field(
        'red, 50% transparent',
        description='The color of the scene geometry that is not visible to the sensor.',
    )
    viewshedResolution: Optional[Integer] = Field(
        2048, description='The resolution in pixels of the viewshed.'
    )
