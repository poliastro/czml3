# generated by datamodel-codegen:
#   filename:  EyeOffset.json
#   timestamp: 2021-04-04T10:04:35+00:00

from __future__ import annotations

from typing import List, Optional, Union

import BaseCZMLObject
from pydantic import Field

from .DeletableProperty import DeletableProperty
from .InterpolatableProperty import InterpolatableProperty
from .Values import Cartesian3Value, ReferenceValue


class EyeOffset1(InterpolatableProperty, DeletableProperty):
    """
    An offset in eye coordinates which can optionally vary over time. Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis poitns up, and the Z-axis points into the screen.
    """

    cartesian: Optional[Cartesian3Value.Cartesian3] = Field(
        None,
        description='The eye offset specified as a three-dimensional Cartesian value `[X, Y, Z]`, in eye coordinates in meters. If the array has three elements, the eye offset is constant. If it has four or more elements, they are time-tagged samples arranged as `[Time, X, Y, Z, Time, X, Y, Z, ...]`, where Time is an ISO 8601 date and time string or seconds since epoch.',
    )
    reference: Optional[ReferenceValue.Reference] = Field(
        None, description='The eye offset specified as a reference to another property.'
    )


class EyeOffset(BaseCZMLObject):
    """
    An offset in eye coordinates which can optionally vary over time. Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis poitns up, and the Z-axis points into the screen.
    """

    __root__: Union[List[EyeOffset1], EyeOffset1] = Field(
        ...,
        description="An offset in eye coordinates which can optionally vary over time. Eye coordinates are a left-handed coordinate system where the X-axis points toward the viewer's right, the Y-axis poitns up, and the Z-axis points into the screen.",
        title='EyeOffset',
    )
